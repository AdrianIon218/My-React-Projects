{"version":3,"file":"static/js/161.54bfdb62.chunk.js","mappings":"uKACA,EAAkC,kCAAlC,EAAkF,8BAAlF,EAAqI,qCAArI,EAAiL,uBAAjL,EAAsN,8BAAtN,EAAuQ,mCAAvQ,EAAqT,2BAArT,EAAqZ,2BAArZ,EAAuc,uCAAvc,EAAojB,8BCkCpjB,EAnCuB,CACrB,CACEA,KAAM,aACNC,MAAO,uBAET,CACED,KAAM,QACNC,MAAO,qBAET,CACED,KAAM,aACNC,MAAO,uBAET,CACED,KAAM,OACNC,MAAO,eAET,CACED,KAAM,OACNC,MAAO,YAET,CACED,KAAM,UACNC,MAAO,eAET,CACED,KAAM,MACNC,MAAO,cAET,CACED,KAAM,WACNC,MAAM,iB,kBCVV,MAlBA,SAAsBC,GACpB,IAAMC,GAAUC,EAAAA,EAAAA,UAOhB,OACE,iBAAKC,UAAWC,EAAiB,WAC7B,gBAAKD,UAAWC,EAA8BC,IAAKJ,KAGnD,mBAAQE,UAAWC,EAAkBE,QAVjB,SAACC,GACzBN,EAASO,QAAQC,UAAUC,IAAIN,GAC/BO,WAAWX,EAAMY,aAAc,IACjC,EAOsE,oBAGxE,ECde,SAASC,EAAKb,GAC3B,OAA+Cc,EAAAA,EAAAA,WAAS,GAAM,eAAvDC,EAAmB,KAAEC,EAAe,KAgB3C,IAAMC,EAAaC,OAAOC,KAAKnB,EAAMiB,YAC1BG,KAAI,SAACC,EAAKC,GACT,IAAMC,EAAevB,EAAMiB,WAAWI,GAChCG,EAAWC,EAAAA,QAAsB,SAAAD,GAAQ,OAAIA,EAAS1B,OAASyB,CAAY,IACjF,OAAOC,EAASE,OAAS,GACtB,gBAAiBC,IAAKH,EAAS,GAAG1B,KAAMK,UAAWC,EAC9CwB,IAAKC,EAAAA,IAAAA,CAAQ,YAAgBL,EAAS,GAAGzB,SADpCuB,IAEV,gBAAiBnB,UAAWC,EAA2B,SAAEmB,GAA/CD,EACb,IAENQ,EAAc9B,EAAM+B,YAE1B,OAAQ,gCACLhB,IAAuB,SAAC,EAAY,CAACH,aAjBxC,WACEI,GAAgB,EAClB,KAgBE,iBAAKb,UAAWC,EAAqBE,QA5BvC,WACEU,GAAgB,GACbhB,EAAMgC,aACPhB,GAAgB,GAGhBiB,OAAOC,KAAKlC,EAAMmC,KAAM,SAE5B,EAoB4D,WACxD,gBAAKhC,UAAWC,EAAyB,SACxCa,KAED,iBAAKd,UAAWC,EAAa,WAC3B,gBAAKwB,IAAKC,EAAAA,IAAAA,CAAQ,YAAgB7B,EAAMoC,YAAcT,IAAK3B,EAAMoC,aACjE,2BAAQpC,EAAMqC,eAEhB,iBAAMlC,UAAWC,EAAqBE,QAAS,SAACgC,GAASA,EAAMC,iBAAkB,EAAE,SAAET,SAI3F,C,aC1Ce,SAASU,IACtB,IAAMC,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GACvBC,EAAW,GAEZH,EAAQI,cACTD,GAAQ,OAAOH,EAAQI,cAGzB,IAAMC,EAAmBF,EAASxB,KAAI,SAAC2B,EAAQzB,GAC7C,OACE,SAACT,EAAI,CACHuB,UAAWW,EAAQX,UACnBD,KAAMY,EAAQZ,KACdX,SAAUuB,EAAQvB,SAClBP,WAAY8B,EAAQ9B,WACpBc,YAAagB,EAAQhB,YACrBC,aAAqB,OAAPe,QAAO,IAAPA,OAAO,EAAPA,EAASf,aAAa,SAErCe,EAAQC,OARE1B,EAUb,IAEF,OACE,oBAASnB,UAAWC,EAAwB,SACzC0C,GAGP,C","sources":["webpack://cvpage/./src/components/Projects/Projects.module.css?cd21","components/Projects/CategoryPhotos.js","components/Projects/ProjectPanel.js","components/Projects/Card.js","components/Projects/Projects.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cards_container\":\"Projects_cards_container__I5qf4\",\"CardElement\":\"Projects_CardElement__1kF6H\",\"category_container\":\"Projects_category_container__2z8SO\",\"card\":\"Projects_card__6xl7W\",\"tooltiptext\":\"Projects_tooltiptext__YP9ZR\",\"column_container\":\"Projects_column_container__5CZub\",\"backdrop\":\"Projects_backdrop__w7WHA\",\"background-fade-in\":\"Projects_background-fade-in__8Ogmw\",\"exit_btn\":\"Projects_exit_btn__gX7Vn\",\"project_presentation\":\"Projects_project_presentation__B+7Lq\",\"presentation_anim\":\"Projects_presentation_anim__hycvS\",\"close_panel\":\"Projects_close_panel__eRAId\",\"presentation_close_anim\":\"Projects_presentation_close_anim__xQ6Tz\"};","const categoryPhotos = [\r\n  {\r\n    Name: 'Javascript',\r\n    Photo: 'JavaScript-logo.png'\r\n  },\r\n  {\r\n    Name: 'React',\r\n    Photo: 'react-Project.png'\r\n  },\r\n  {\r\n    Name: 'Typescript',\r\n    Photo: 'typescript-logo.png'\r\n  },\r\n  {\r\n    Name: 'Node',\r\n    Photo: 'node-js.png'\r\n  },\r\n  {\r\n    Name: 'Sass',\r\n    Photo: 'sass.png'\r\n  },\r\n  {\r\n    Name: 'Angular',\r\n    Photo: 'Angular.png'\r\n  },\r\n  {\r\n    Name: 'Vue',\r\n    Photo: 'vue_js.jpg'\r\n  },\r\n  {\r\n    Name: \"Firebase\",\r\n    Photo:\"firebase.jpg\"\r\n  }\r\n];\r\n\r\nexport default categoryPhotos;","import { useRef } from 'react';\r\nimport classes from './Projects.module.css';\r\n\r\nfunction ProjectPanel(props) {\r\n  const panelRef= useRef();\r\n\r\n  const closePresentation = (e)=>{\r\n    panelRef.current.classList.add(classes.close_panel);\r\n    setTimeout(props.onClosePanel, 600);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.backdrop}>\r\n        <div className={classes.project_presentation} ref={panelRef}>\r\n           \r\n        </div>\r\n        <button className={classes.exit_btn} onClick={closePresentation}>&times;</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectPanel;","import classes from './Projects.module.css';\r\nimport categoryPhotos from './CategoryPhotos';\r\nimport ProjectPanel from './ProjectPanel';\r\nimport { useState } from 'react';\r\n\r\nexport default function Card(props){\r\n  const [isProjectPanelShown, setProjectPanel] = useState(false);\r\n\r\n  function onCardClick(){\r\n    setProjectPanel(true);\r\n    if(props.presentation){\r\n      setProjectPanel(true);\r\n    }\r\n    else{\r\n      window.open(props.link, '_blank');\r\n    }\r\n  }\r\n\r\n  function onClosePanel(){\r\n    setProjectPanel(false);\r\n  }\r\n\r\n  const categories = Object.keys(props.categories)\r\n            .map((key, index) => {\r\n              const categoryName = props.categories[key];\r\n              const category = categoryPhotos.filter(category => category.Name === categoryName);\r\n              return category.length > 0 ?\r\n                (<img key={index} alt={category[0].Name} className={classes.category_container}\r\n                      src={require(`../../images/${category[0].Photo}`)}  />) :\r\n                (<div key={index} className={classes.category_container}>{categoryName}</div>);\r\n              });\r\n\r\n  const tooltiptext = props.description;\r\n\r\n  return (<>\r\n    {isProjectPanelShown && <ProjectPanel onClosePanel={onClosePanel} />}\r\n    <div className={classes.CardElement} onClick={onCardClick}>\r\n      <div className={classes.column_container}>\r\n      {categories}\r\n      </div>\r\n      <div className={classes.card}>\r\n        <img src={require(`../../images/${props.photoName}`)} alt={props.photoName} />\r\n        <label>{props.children}</label>\r\n      </div>\r\n      <span className={classes.tooltiptext} onClick={(event)=>{event.stopPropagation();}}>{tooltiptext}</span>\r\n    </div>\r\n\r\n  </>);\r\n}","import Card from './Card';\r\nimport classes from './Projects.module.css'\r\nimport {useContext} from 'react'\r\nimport {UserContext} from '../Context/UserContext'\r\n\r\n\r\nexport default function Projects(){\r\n  const userCtx = useContext(UserContext);\r\n  let projects = [];\r\n\r\n  if(userCtx.projectsArr){\r\n    projects = [...userCtx.projectsArr];\r\n  }\r\n\r\n  const projectsElements = projects.map((project,index)=>{\r\n    return (\r\n      <Card key={index} \r\n        photoName={project.photoName} \r\n        link={project.link} \r\n        category={project.category}\r\n        categories={project.categories}\r\n        description={project.description}\r\n        presentation={project?.presentation}\r\n        >\r\n      {project.title}\r\n      </Card>);\r\n    });\r\n\r\n  return (\r\n    <section className={classes.cards_container}>\r\n      {projectsElements}\r\n    </section>\r\n  );\r\n}"],"names":["Name","Photo","props","panelRef","useRef","className","classes","ref","onClick","e","current","classList","add","setTimeout","onClosePanel","Card","useState","isProjectPanelShown","setProjectPanel","categories","Object","keys","map","key","index","categoryName","category","categoryPhotos","length","alt","src","require","tooltiptext","description","presentation","window","open","link","photoName","children","event","stopPropagation","Projects","userCtx","useContext","UserContext","projects","projectsArr","projectsElements","project","title"],"sourceRoot":""}