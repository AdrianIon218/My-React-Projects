{"version":3,"file":"static/js/229.3cab76e3.chunk.js","mappings":"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","sources":["webpack://cvpage/./src/components/CV/CV.module.css?4089","components/CV/nationalityFlags.js","components/CV/Nationality.js","components/CV/Profile.js","components/CV/Skill.js","components/CV/SkillList.js","components/CV/Education.js","components/CV/EducationList.js","components/CV/useDateFormated.js","components/CV/Job.js","components/CV/JobsList.js","components/CV/CV.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"CV_title__-FsDq\",\"center\":\"CV_center__+pMWo\",\"elementsAligned\":\"CV_elementsAligned__jn3Fk\",\"flag\":\"CV_flag__8SOy+\",\"divSection\":\"CV_divSection__YMMY8\",\"divColumn\":\"CV_divColumn__axWhw\",\"no-margin-y\":\"CV_no-margin-y__qR0jW\",\"no-margin-top\":\"CV_no-margin-top__IreRc\",\"listSquare\":\"CV_listSquare__z722h\",\"myPhoto\":\"CV_myPhoto__QM36W\",\"description\":\"CV_description__O7bQm\"};","const NationalFlags = [\n  {\n    Nationality: \"Romanian\",\n    FlagName: \"romanianFlag.png\",\n  }\n];\n\nexport default NationalFlags;\n","import classes from \"./CV.module.css\";\nimport NationalFlags from \"./nationalityFlags\";\n\nexport default function Nationality(props) {\n  const europeanFlag = props.isEuropean ? (\n    <img\n      title=\"EU citizen\"\n      src={require(\"../../images/europeanFlag.png\")}\n      className={classes.flag}\n      alt=\"European\"\n    />\n  ) : null;\n\n  const nationality = !props.nationality\n    ? null\n    : NationalFlags.filter((item) => item.Nationality === props.nationality);\n\n  const nationalityFlag =\n    nationality.length === 0 ? null : (\n      <img\n        title={props.nationality}\n        src={require(`../../images/${nationality[0].FlagName}`)}\n        className={classes.flag}\n        alt={props.nationality}\n      />\n    );\n\n  return !europeanFlag && !nationalityFlag ? null : (\n    <p>\n      {\" \"}\n      {nationalityFlag} {europeanFlag}{\" \"}\n    </p>\n  );\n}\n","import classes from \"./CV.module.css\";\nimport Nationality from \"./Nationality\";\n\nexport default function Profile(props) {\n  const { birthdate } = props;\n\n  function calculateAge() {\n    var diff_ms = Date.now() - new Date(birthdate).getTime();\n    var age_dt = new Date(diff_ms);\n    return Math.abs(age_dt.getUTCFullYear() - 1970);\n  }\n\n  const age = calculateAge();\n\n  const nationality = (\n    <Nationality\n      isEuropean={props.isEuropean}\n      nationality={props.nationality}\n    />\n  );\n\n  return (\n    <section>\n      <h2 className={classes.title}>{props.name}</h2>\n      <p className={classes.center}>\n        <img\n          className={classes.myPhoto}\n          alt=\"\"\n          src={require(`../../images/${props.photoProfile}`)}\n        />\n      </p>\n      <div className={`${classes.center} ${classes.divColumn}`}>\n        <i className=\"fas fa-map-marker-alt\">&nbsp;{props.address}</i>\n        <i className=\"fas fa-male\">&nbsp;{`${age} years old`}</i>\n        <i className=\"fas fa-suitcase\">&nbsp;{props.jobTitle}</i>\n        {nationality}\n      </div>\n    </section>\n  );\n}\n","import classes from \"./CV.module.css\";\n\nexport default function Skill(props) {\n  let iconSkill;\n  let listElements;\n  switch (props.name) {\n    case \"software\":\n      listElements = Object.keys(props.list).map((id) => {\n        if (id === \"type\") {\n          return null;\n        } else {\n          return <li key={id}>{props.list[id]}</li>;\n        }\n      });\n      iconSkill = <i className=\"fas fa-laptop-code\"></i>;\n      break;\n\n    case \"languages\":\n      listElements = Object.keys(props.list).map((id) => {\n        if (id === \"type\") {\n          return null;\n        } else {\n          return (\n            <li key={id}>\n              {id} : {props.list[id]}\n            </li>\n          );\n        }\n      });\n      iconSkill = <i className=\"fas fa-apple-alt\"></i>;\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div>\n      <h3>\n        {iconSkill} {`${props.name[0].toUpperCase() + props.name.slice(1)}`} :\n      </h3>\n      <ul className={classes.listSquare}>{listElements}</ul>\n    </div>\n  );\n}\n","import Skill from \"./Skill\";\nimport classes from \"./CV.module.css\";\n\nexport default function SkillList({ skillsArr: arr }) {\n  const skillsElements = arr.map((skill, index) => {\n    return <Skill key={index} name={skill.type} list={{ ...skill }} />;\n  });\n\n  return (\n    <section className={`${classes.divColumn} ${classes.divSection}`}>\n      <h2 className={classes.title}>\n        <i className=\"fas fa-award\" />\n        &nbsp;Skills\n      </h2>\n      {skillsElements}\n    </section>\n  );\n}\n","import classes from \"./CV.module.css\";\n\nexport default function Education(props) {\n  return (\n    <div className={classes.divColumn}>\n      <h3 className={`${classes.elementsAligned} ${classes[\"no-margin-y\"]}`}>\n        <i className=\"fas fa-school\" />\n        {props.universityName}\n      </h3>\n      <ul className={classes[\"no-margin-top\"]}>\n        <li>{props.facultyName}</li>\n        <li>Degree : {props.degree}</li>\n        <li>Field of Study : {props.fieldOfStudy}</li>\n        <li>Period : {props.period}</li>\n      </ul>\n    </div>\n  );\n}\n","import Education from \"./Education\";\nimport classes from \"./CV.module.css\";\n\nexport default function EducationList({ educationArr: arr }) {\n  const educationElements = arr.map((item, index) => {\n    return <Education key={index} {...item} />;\n  });\n\n  return (\n    <section className={`${classes.divColumn} ${classes.divSection}`}>\n      <h2 className={classes.title}>\n        <i className=\"fas fa-graduation-cap\" />\n        &nbsp;Education\n      </h2>\n      {educationElements}\n    </section>\n  );\n}\n","const useDateFormated = (date) => {\n  if (!date) return null;\n\n  if (date === \"prezent\") return \"prezent\";\n\n  const actualDate = new Date(date);\n  const monthName = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  const day = actualDate.getDate();\n  const month = monthName[actualDate.getMonth()];\n  const year = actualDate.getFullYear();\n  const dateFormated = `${day} ${month}. ${year}`;\n  return dateFormated;\n};\n\nexport default useDateFormated;\n","import classes from \"./CV.module.css\";\nimport useDateFormated from \"./useDateFormated\";\n\nexport default function Job(props) {\n  const startDateFormated = useDateFormated(props.startDate);\n  const endDateFormated = useDateFormated(props.endDate);\n\n  return (\n    <div>\n      <h3 className={classes.elementsAligned}>\n        <i className=\"fas fa-business-time\" />\n        {props.position}\n      </h3>\n      <ul>\n        <li>Company : {props.companyName}</li>\n        <li>Period : {`${startDateFormated} - ${endDateFormated}`}</li>\n        <li>Location : {props.location}</li>\n        <li>\n          Description :{\" \"}\n          <span className={classes.description}>- {props.description}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import classes from \"./CV.module.css\";\nimport Job from \"./Job.js\";\n\nexport default function JobsList({ jobsArr: arr }) {\n  const jobsElements = arr.map((job, index) => {\n    return <Job key={index} {...job} />;\n  });\n\n  return (\n    <section className={`${classes.divColumn} ${classes.divSection}`}>\n      <h2 className={classes.title}>\n        <i className=\"fas fa-briefcase\" />\n        &nbsp;Work experience\n      </h2>\n      {jobsElements}\n    </section>\n  );\n}\n","import { useContext } from \"react\";\nimport { UserContext } from \"../Context/UserContext\";\nimport Profile from \"./Profile\";\nimport SkillList from \"./SkillList\";\nimport EducationList from \"./EducationList\";\nimport JobsList from \"./JobsList\";\n\nexport default function CV() {\n  const userCtx = useContext(UserContext);\n  const { cvData, educationArr, skillsArr, jobsArr } = userCtx;\n\n  return (\n    <section>\n      {cvData && <Profile {...cvData} />}\n\n      {educationArr && <EducationList educationArr={educationArr} />}\n\n      {skillsArr && <SkillList skillsArr={skillsArr} />}\n\n      {jobsArr && <JobsList jobsArr={jobsArr} />}\n    </section>\n  );\n}\n"],"names":["Nationality","FlagName","props","europeanFlag","isEuropean","title","src","require","className","classes","alt","nationality","NationalFlags","item","nationalityFlag","length","Profile","birthdate","age","diff_ms","Date","now","getTime","age_dt","Math","abs","getUTCFullYear","calculateAge","name","photoProfile","address","jobTitle","Skill","iconSkill","listElements","Object","keys","list","map","id","toUpperCase","slice","SkillList","skillsElements","skillsArr","skill","index","type","Education","universityName","facultyName","degree","fieldOfStudy","period","EducationList","educationElements","educationArr","date","actualDate","day","getDate","month","getMonth","year","getFullYear","Job","startDateFormated","useDateFormated","startDate","endDateFormated","endDate","position","companyName","location","description","JobsList","jobsElements","jobsArr","job","CV","userCtx","useContext","UserContext","cvData"],"sourceRoot":""}